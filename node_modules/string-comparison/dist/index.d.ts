declare abstract class Similarity {
    /**
     * @description 比较两个字符串
     */
    abstract similarity(thanos: string, rival: string): number;
    /**
     * @description 寻找最佳匹配结果
     */
    sortMatch(thanos: string, avengers: string[]): {
        member: string;
        index: number;
        rating: number;
    }[];
    abstract distance(thanos: string, rival: string): number;
    static checkThanosType(thanos: string): void;
    static checkRivalType(rival: string): void;
    static checkAvengersType(avengers: string[]): void;
    static initParams(thanos: string, rival: string): string[];
}

declare class Cosine extends Similarity {
    constructor();
    similarity(thanos: any, rival: any): number;
    distance(thanos: any, rival: any): number;
    static stringVectorization(strArr: any, common: any): any;
}

declare class DiceCoefficient extends Similarity {
    constructor();
    similarity(thanos: any, rival: any): number;
    distance(thanos: any, rival: any): number;
}

declare class JaccardIndex extends Similarity {
    constructor();
    similarity(thanos: any, rival: any): number;
    distance(thanos: any, rival: any): number;
}

declare class Levenshtein extends Similarity {
    constructor();
    similarity(thanos: any, rival: any): number;
    distance(thanos: any, rival: any): any;
}

declare class LongestCommonSubsequence extends Similarity {
    constructor();
    similarity(thanos: any, rival: any): number;
    distance(thanos: any, rival: any): number;
    static lcsLength(thanos: any, rival: any): any;
}

declare class MetricLCS extends Similarity {
    constructor();
    similarity(thanos: any, rival: any): number;
    distance(thanos: any, rival: any): number;
    static lcsLength(thanos: any, rival: any): any;
}

declare const cosine: Cosine;
declare const diceCoefficient: DiceCoefficient;
declare const jaccardIndex: JaccardIndex;
declare const levenshtein: Levenshtein;
declare const lcs: LongestCommonSubsequence;
declare const mlcs: MetricLCS;

export { cosine, diceCoefficient, jaccardIndex, lcs, levenshtein, mlcs };
