var T=Object.defineProperty;var k=Object.getOwnPropertyDescriptor;var x=Object.getOwnPropertyNames;var w=Object.prototype.hasOwnProperty;var P=p=>T(p,"__esModule",{value:!0});var A=(p,e)=>{for(var t in e)T(p,t,{get:e[t],enumerable:!0})},b=(p,e,t,c)=>{if(e&&typeof e=="object"||typeof e=="function")for(let n of x(e))!w.call(p,n)&&(t||n!=="default")&&T(p,n,{get:()=>e[n],enumerable:!(c=k(e,n))||c.enumerable});return p};var R=(p=>(e,t)=>p&&p.get(e)||(t=b(P({}),e,1),p&&p.set(e,t),t))(typeof WeakMap!="undefined"?new WeakMap:0);var V={};A(V,{cosine:()=>M,diceCoefficient:()=>S,jaccardIndex:()=>L,lcs:()=>j,levenshtein:()=>z,mlcs:()=>E});var r=class{sortMatch(e,t){return r.checkThanosType(e),r.checkAvengersType(t),t.map((c,n)=>({member:c,index:n,rating:this.similarity(e,c)})).sort((c,n)=>c.rating-n.rating)}static checkThanosType(e){if(typeof e!="string")throw new Error("first argument should be a string")}static checkRivalType(e){if(typeof e!="string")throw new Error("second argument should be a string")}static checkAvengersType(e){if(!Array.isArray(e))throw new Error("second argument should be an array of strings");if(e.find(t=>typeof t!="string"))throw new Error("second argument should be an array of strings")}static initParams(e,t){return[e.replace(/\s+/g,"").toLowerCase(),t.replace(/\s+/g,"").toLowerCase()]}};var u=class extends r{constructor(){super()}similarity(e,t){if(r.checkThanosType(e),r.checkRivalType(t),e=r.initParams(e,t)[0],t=r.initParams(e,t)[1],!e.length&&!t.length)return 1;if(!e.length||!t.length)return 0;if(e===t)return 1;let c=Array.from(new Set(e.split("").concat(t.split("")))),n=u.stringVectorization(e.split(""),c),s=u.stringVectorization(t.split(""),c),[m,i,l]=[0,0,0];for(let g=0;g<n.length;++g)m+=n[g]*s[g],i+=n[g]*n[g],l+=s[g]*s[g];return i=Math.sqrt(i),l=Math.sqrt(l),1*m/(i*l)}distance(e,t){return 1-this.similarity(e,t)}static stringVectorization(e,t){return t.map(c=>e.includes(c)?1:0)}};var y=class extends r{constructor(){super()}similarity(e,t){r.checkThanosType(e),r.checkRivalType(t),e=r.initParams(e,t)[0],t=r.initParams(e,t)[1];let[c,n]=[e.length,t.length];if(!e.length&&!t.length||e===t)return 1;if(c<2||n<2)return 0;let s=new Map;for(let i=0;i<c-1;i++){let l=e.substr(i,2),g=s.has(l)?s.get(l)+1:1;s.set(l,g)}let m=0;for(let i=0;i<n-1;i++){let l=t.substr(i,2),g=s.has(l)?s.get(l):0;g>0&&(s.set(l,g-1),++m)}return 2*m/(c+n-2)}distance(e,t){return 1-this.similarity(e,t)}};var h=class extends r{constructor(){super()}similarity(e,t){if(r.checkThanosType(e),r.checkRivalType(t),e=r.initParams(e,t)[0],t=r.initParams(e,t)[1],!e.length&&!t.length||e===t)return 1;let c=new Set(e.split("").concat(t.split(""))),n=new Set(e.split("").filter(s=>new Set(t).has(s)));return 1*n.size/c.size}distance(e,t){return 1-this.similarity(e,t)}};var d=class extends r{constructor(){super()}similarity(e,t){return r.checkThanosType(e),r.checkRivalType(t),e=r.initParams(e,t)[0],t=r.initParams(e,t)[1],!e.length&&!t.length?1:1-1*this.distance(e,t)/Math.max(e.length,t.length)}distance(e,t){if(r.checkThanosType(e),r.checkRivalType(t),e=r.initParams(e,t)[0],t=r.initParams(e,t)[1],e===t)return 0;let[c,n]=[e.length,t.length];if(!c)return n;if(!n)return c;let s=[...Array(c+1)].map(()=>Array(n+1).fill(0));for(let i=0;i<=c;++i)s[i][0]=i;for(let i=0;i<=n;++i)s[0][i]=i;let m;for(let i=1;i<=c;++i)for(let l=1;l<=n;++l)m=e[i-1]===t[l-1]?0:1,s[i][l]=Math.min(s[i-1][l]+1,s[i][l-1]+1,s[i-1][l-1]+m);return s[c][n]}};var f=class extends r{constructor(){super()}similarity(e,t){return r.checkThanosType(e),r.checkRivalType(t),e=r.initParams(e,t)[0],t=r.initParams(e,t)[1],!e.length&&!t.length||e===t?1:2*f.lcsLength(e,t)/(e.length+t.length)}distance(e,t){return e.length+t.length-2*f.lcsLength(e,t)}static lcsLength(e,t){r.checkThanosType(e),r.checkRivalType(t),e=r.initParams(e,t)[0],t=r.initParams(e,t)[1];let[c,n]=[e.length,t.length],s=[...Array(c+1)].map(()=>Array(n+1).fill(0));for(let m=1;m<=c;++m)for(let i=1;i<=n;++i)s[m][i]=e[m-1]===t[i-1]?s[m-1][i-1]+1:Math.max(s[m][i-1],s[m-1][i]);return s[c][n]}};var a=class extends r{constructor(){super()}similarity(e,t){return r.checkThanosType(e),r.checkRivalType(t),e=r.initParams(e,t)[0],t=r.initParams(e,t)[1],!e.length&&!t.length||e===t?1:1*a.lcsLength(e,t)/Math.max(e.length,t.length)}distance(e,t){return r.checkThanosType(e),r.checkRivalType(t),e===t?0:1-this.similarity(e,t)}static lcsLength(e,t){r.checkThanosType(e),r.checkRivalType(t),e=r.initParams(e,t)[0],t=r.initParams(e,t)[1];let[c,n]=[e.length,t.length],s=[...Array(c+1)].map(()=>Array(n+1).fill(0));for(let m=1;m<=c;++m)for(let i=1;i<=n;++i)s[m][i]=e[m-1]===t[i-1]?s[m-1][i-1]+1:Math.max(s[m][i-1],s[m-1][i]);return s[c][n]}};var M=new u,S=new y,L=new h,z=new d,j=new f,E=new a;module.exports=R(V);0&&(module.exports={cosine,diceCoefficient,jaccardIndex,lcs,levenshtein,mlcs});
