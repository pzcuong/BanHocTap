// Generated by LiveScript 1.6.0
var fs, path, fsExtra, aux, adapter, basebuild;
fs = require('fs');
path = require('path');
fsExtra = require('fs-extra');
aux = require('../aux');
adapter = require('../adapter');
basebuild = function(opt){
  opt == null && (opt = {});
  this.init(opt);
  return this;
};
basebuild.prototype = import$(Object.create(Object.prototype), {
  isSupported: function(file){},
  getDependencies: function(file){},
  build: function(files){},
  purge: function(files){},
  resolve: function(file){},
  init: function(opt){
    var this$ = this;
    opt == null && (opt = {});
    this.log = opt.logger || aux.logger;
    this.base = opt.base || this.base || '.';
    this.srcdir = path.normalize(path.join(this.base, opt.srcdir || this.srcdir || '.'));
    this.desdir = path.normalize(path.join(this.base, opt.desdir || this.desdir || '.'));
    this.adapter = new adapter({
      base: this.srcdir,
      getDependencies: function(it){
        return this$.getDependencies(it);
      },
      isSupported: function(it){
        return this$.isSupported(it);
      },
      build: function(files){
        return this$.build(files);
      },
      purge: function(files){
        return this$.purge(files);
      },
      resolve: function(file){
        return this$.resolve(file);
      }
    });
    this.adapter.init();
    return this;
  },
  getAdapter: function(){
    return this.adapter;
  }
});
module.exports = basebuild;
function import$(obj, src){
  var own = {}.hasOwnProperty;
  for (var key in src) if (own.call(src, key)) obj[key] = src[key];
  return obj;
}